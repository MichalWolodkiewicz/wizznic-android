# This is the template file used for creating new levels.
# Change settings here so you don't have to write in your
# name and other options each time you create a new level.
# Comments won't be copied to new levels.

# It is also the documentation of how the game loads resources.
# Please note that all paths, are relative to the pack-dir/themes/,
# also, please note, that if a file is not found under the
# current pack-directory, the game will try the same path 
# under the 000_wizznic pack-dir. For example:
# If your pack-dir is called awesomeExperts and you are
# describing tilebase=artzy/backgrounds/imagination.png
# the game will first check for the file at:
# packs/awesomeExperts/themes/artzy/backgrounds/imagination.png
# if there is not file at that path, it will try:
# packs/000_wizznic/themes/artzy/backgrounds/imagination.png
# Basically, this means that you can use files from both
# your own pack, AND files from 000_wizznic, this leaves you
# with a lot of freedom, you can choose to recreate all assets,
# or only replace some parts.
# For example, you could chose to reuse the tileset from the thor
# theme, use the cursor from the "cyberpunk" theme, and provide
# your own background images,

# Author of level
# Maximum length: 15 |
author=Your Name Here

# Show teleport paths when player has cursor over teleport (1 = yes, 0 = no)
showtelepaths=0

# Name of the level
# Maximum length: 27                 |
levelname=Give the puzzle a name

# Seconds to complete level
seconds=999

# Background image file.
bgfile=thor/bg/BG01.png

# Base name for tiles (animated tiles will have -tileNN.png appended for each tile, optional)
# It is possible to provide animation sheets for each tile too,
# The game will open tilebase.png (In this case: thor/tiles/thor.png)
# It will then look for animation sheets for each tile, (thor/tiles/thor-tile00.png,
# thor/tiles/thor-tile01.png, .. thor/tiles/thor/tiles/thor-tile16.png)
# If it finds an animation sheet, it will use that instead of the graphics in
# the base file. Animation sheets also provide extra graphics space around
# bricks, the teleport animation is a nice example of how this is used to make
# the teleport less "bricky". base tile sheets are 20x(NUMTILES*20) pixels
# Animation sheets are 30x(NUMFRAMES*30) pixels in size.
# The number of frames in a tile animation sheet is free, you decide, but
# the framerate is fixed to game-fps (should be 50 fps).
# The fact that bricks in animation sheets are drawn as 30x30px means that
# one could also use a 1 frame animation sheet to be able to draw non-animated
# bricks 30x30 px instead of 20x20 px.
tilebase=thor/tiles/thor

# Base name for "brick die" animations ( will have NN.png appended for each tile, optional )
# The value below will have the game look for thor/expl/tomb00.png through thor/expl/tomb09.png)
# An explotion should be exactly 16 frames long, it is drawn on top of the brick graphics, untill
# frame number 8, after which the underlying brick is no longer drawn and the rest remaining 8
# frames are drawn with no brick below them.
# The framerate is calculated based on "brickdietime", this way you can simply for how many
# milliseconds you wish your animation to play.
# The game will load explbase00.png (for example thor/expl/tomb00.png) and then try to load the
# remaining 8 animation sheets, if it fails to load a sheet, it will instead use explbase00.png
# This means that the first sheet is required, while the remaining 8 are optional, so you can
# Choose to use only one "brick die" animation for all bricks, or you could have a special
# animation for each kind of brick, or you a combination (for example, maybe bricks 2 and 4 are
# the only one not using the same die animation as the rest.
explbase=thor/expl/tomb

# Wall base
# The game will  load wallbase.png and try look for
# wallbase-extra.png, for example:
# thor/walls/lightstone.png (required, an 20x20 px image of a single wall-brick)
# thor/walls/lightstone-extra.png (optional, an image containing all "non-freestanding"
# wall-graphics.
wallbase=thor/walls/lightstone

# Directory containing soundfiles
# Look in the directory to see what filenames the soundfiles should have
# if you want to create your own sound-theme.
sounddir=oldskool/snd

# Character map basename (will have 0.png and 1.png appended for 8x8px and 12x12px sizes)
# The game will look in chars/ after charbase0.png and charbase1.png
# For example, if charbase is thor:
# chars/thor0.png will contain the small character set
# chars/thor1.png will contain the large character set
charbase=thor

# Filename of cursor (2 frames)
# The game will look in cursors/ after an 2 frame animation-sheet
# For example if cursorfile is thor.png:
# cursors/thor.png will be loaded and used for the cursor.
cursorfile=thor.png

# Image to show just before entering level.
# For example thor/misc/preparetosink.png
# Will simply load that file and display it before
# entering the level.
startimage=none

# Image to show after completion of level
# See startimage.
stopimage=none

# Do you want particles to be spawned behind the "brick die" animation?
# While particles DO look most awesome indeed, it might be that your particular (hahaa)
# theme would just look better without particles when the bricks die, and ofcause you
# have options here! :) 
# 0 = Don't draw any particles when a brick dies
# 1 = Draw on top of both the brick and the die animation
# 2 = Draw beneath the brick
# 3 = Draw beneath the die animation [Default]
# Not to self: These corrosponds to the PSYS_LAYER_* defines in defs.h
brickdieparticles=3

# Amount of time it should take for the "brick die" animation to play (in ms)
# Basically, how long do you want the death-animation to play?
# This affects gameplay since it won't be possible to move other bricks
# into the space of a dying brick untill after the animation have played through,
# so please that that into consideration,
brickdietime=750


# The level data, nothing much to see here,
# If you care what the numbers mean, check the
# source code. Teleports lists will be appended
# just before the level data and again are not
# intended for user-manipulation except from
# the level editor :)
[data]
0000000000000000000000
0000000000000000000000
0000000000000000000000
0000000000000000000000
0000000000000000000000
0000000000000000000000
0000000000000000000000
0000000000000000000000
0000000000000000000000
0000000000000000000000
0000000000000000000000
0000000000000000000000
